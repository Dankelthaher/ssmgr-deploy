#!/bin/bash

### BEGIN INIT INFO
# Provides:          Shadowsocks
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $network $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Fast tunnel proxy that helps you bypass firewalls
# Description:       Start or stop the Shadowsocks server
### END INIT INFO

# Author: Teddysun <i@teddysun.com>

if [ -f /usr/bin/ssserver ]; then
    DAEMON=/usr/bin/ssserver
elif [ -f /usr/local/bin/ssserver ]; then
    DAEMON=/usr/local/bin/ssserver
fi
if [ -f /etc/shadowsocks-manager-python/config.json ]; then
    CONF=/etc/shadowsocks-manager-python/config.json
elif [ -f /etc/shadowsocks.json ]; then
    CONF=/etc/shadowsocks.json
fi
NAME=shadowsocks-manager-python
SS_NAME=SS-node-python
SS_PORT=6000

RET_VAL=0

check_running(){
    PID=$(ps -ef | grep -v grep | grep -i "${DAEMON}" | awk '{print $2}')
    if [ -n "$PID" ]; then
        return 0
    else
        return 1
    fi
}

check_manager_running(){
    SS_PID=$(ps -ef | grep -v grep | grep -i "${SS_NAME}" | awk '{print $2}')
    if [ -n "$SS_PID" ]; then
        return 0
    else
        return 1
    fi
}

do_status(){
    check_running
    if [ $? -eq 0 ]; then
        echo "$NAME (pid $PID) is running..."
    else
        echo "$NAME is stopped"
        RET_VAL=1
    fi
}


do_start(){
    check_running
    if [ $? -eq 0 ]; then
        echo "$NAME (pid $PID) is already running..."
        exit 0
    else
        $DAEMON -c $CONF -d start
        if [ $? -eq 0 ]; then
            echo "Starting $NAME success"
        else
            echo "Starting $NAME failed"
            RET_VAL=1
        fi
        
        if [ $RET_VAL -eq 0 ]; then
            screen -dmS $SS_NAME ssserver -m aes-256-cfb -p 9000 -k abc123456 --manager-address 127.0.0.1:$SS_PORT
            check_manager_running
            if [ $? -eq 0 ]; then
                echo "Starting $SS_NAME (PID $SS_PID) success"
            else
                echo "Starting $SS_NAME failed"
                RET_VAL=1
            fi
        fi    
    fi
}

do_stop(){
    check_running
    if [ $? -eq 0 ]; then
        $DAEMON -c $CONF -d stop
        if [ $? -eq 0 ]; then
            echo "Stopping $NAME success"
        else
            echo "Stopping $NAME failed"
            RET_VAL=1
        fi

        if [ $RET_VAL -eq 0 ]; then
            check_manager_running
            if [ $? -eq 0 ]; then
                kill -9 $SS_PID
                screen -wipe > /dev/null 2>&1
                check_manager_running
                if [ $? -eq 1 ]; then
                    echo "Stopping $SS_NAME success"
                else
                    echo "Stopping $SS_NAME failed"
                    RET_VAL=1
                fi
            else
                echo "Stopping $SS_NAME failed"
                RET_VAL=1
            fi
        fi
    else
        echo "$NAME is stopped"
        RET_VAL=1
    fi
}

do_restart(){
    do_stop
    sleep 0.5
    do_start
}

case "$1" in
    start|stop|restart|status)
    do_$1
    ;;
    *)
    echo "Usage: $0 { start | stop | restart | status }"
    RET_VAL=1
    ;;
esac

exit $RET_VAL
